CREATE TABLE academic_term (id BIGINT AUTO_INCREMENT, term VARCHAR(255), year SMALLINT NOT NULL, is_active TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE academic_term_course (id BIGINT AUTO_INCREMENT, academic_term_id BIGINT, course_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX academic_term_id_idx (academic_term_id), INDEX course_id_idx (course_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE course (id BIGINT AUTO_INCREMENT, department_id BIGINT NOT NULL, name VARCHAR(255) NOT NULL, code VARCHAR(10) NOT NULL, instructor VARCHAR(255), instructor_id BIGINT NOT NULL, category VARCHAR(255), subject_id BIGINT, access VARCHAR(10), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX code_idx (code), INDEX department_id_idx (department_id), INDEX instructor_id_idx (instructor_id), INDEX subject_id_idx (subject_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE department (id BIGINT AUTO_INCREMENT, school_id BIGINT NOT NULL, name VARCHAR(100) NOT NULL, alias VARCHAR(20), sort SMALLINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX school_id_idx (school_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE document (id BIGINT AUTO_INCREMENT, course_id BIGINT NOT NULL, user_id BIGINT NOT NULL, file VARCHAR(255) NOT NULL, name VARCHAR(100) NOT NULL, description LONGTEXT, date DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX course_id_idx (course_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE event (id BIGINT AUTO_INCREMENT, course_id BIGINT NOT NULL, user_id BIGINT NOT NULL, name VARCHAR(100) NOT NULL, description LONGTEXT NOT NULL, location LONGTEXT NOT NULL, start_date DATETIME NOT NULL, end_date DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX course_id_idx (course_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE friend (id BIGINT AUTO_INCREMENT, user_id BIGINT, friend_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX friend_id_idx (friend_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE friend_request (id BIGINT AUTO_INCREMENT, user_id BIGINT, friend_id BIGINT, status VARCHAR(255), message VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX friend_id_idx (friend_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE instructor_course (id BIGINT AUTO_INCREMENT, user_id BIGINT, course_id BIGINT, access VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX course_id_idx (course_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE issue (id BIGINT AUTO_INCREMENT, description LONGTEXT NOT NULL, information LONGTEXT NOT NULL, user_id BIGINT NOT NULL, from_page LONGTEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE lms_domain_key_secret (id BIGINT AUTO_INCREMENT, domain VARCHAR(255), key_s VARCHAR(128), secret VARCHAR(128), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX domain_idx (domain), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE link_data (id BIGINT AUTO_INCREMENT, url VARCHAR(255) NOT NULL, img VARCHAR(255), title VARCHAR(255) NOT NULL, description LONGTEXT, host VARCHAR(255) NOT NULL, deleted_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE notification (id BIGINT AUTO_INCREMENT, object_id BIGINT UNSIGNED NOT NULL, object_name VARCHAR(255) NOT NULL, related_object_id BIGINT UNSIGNED NOT NULL, related_object_name VARCHAR(255) NOT NULL, template VARCHAR(255) NOT NULL, action VARCHAR(255), type VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE post (id BIGINT AUTO_INCREMENT, object_id BIGINT NOT NULL, object_name VARCHAR(255) NOT NULL, parent_post_id BIGINT, count_like BIGINT, user_id BIGINT NOT NULL, attachment_id BIGINT NOT NULL, attachment_url VARCHAR(255) NOT NULL, ftype BIGINT NOT NULL, content LONGTEXT NOT NULL, is_pinned TINYINT(1), flagget TINYINT(1), everyone TINYINT(1), ftext VARCHAR(255) NOT NULL, document_id BIGINT NOT NULL, private BIGINT, link_data_id BIGINT DEFAULT 0, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX user_id_idx (user_id), INDEX parent_post_id_idx (parent_post_id), INDEX private_idx (private), INDEX object_id_idx (object_id), INDEX deleted_at_idx (deleted_at), INDEX private_deleted_at_idx (deleted_at, private), INDEX user_attachment_id_idx (user_attachment_id), INDEX link_data_id_idx (link_data_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE school (id BIGINT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, short_school VARCHAR(255), twitter_list VARCHAR(255) NOT NULL, first_friend_id BIGINT, default_user_image VARCHAR(255), timezone VARCHAR(255) NOT NULL, is_lms TINYINT DEFAULT 0, lms_domain VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, slug VARCHAR(255), UNIQUE INDEX school_sluggable_idx (slug), INDEX first_friend_id_idx (first_friend_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE subject (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_attachment (id BIGINT AUTO_INCREMENT, user_id BIGINT, file VARCHAR(255), url VARCHAR(255), name VARCHAR(100), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_course (id BIGINT AUTO_INCREMENT, user_id BIGINT, course_id BIGINT, object_name VARCHAR(255) NOT NULL, access VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX course_id_idx (course_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_event (id BIGINT AUTO_INCREMENT, user_id BIGINT, event_id BIGINT, is_attend TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX event_id_idx (event_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_like (id BIGINT AUTO_INCREMENT, user_id BIGINT, object_id BIGINT, count_like BIGINT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_notification (id BIGINT AUTO_INCREMENT, user_id BIGINT, notification_id BIGINT, is_seen TINYINT(1) DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX notification_id_idx (notification_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_school (id BIGINT AUTO_INCREMENT, user_id BIGINT, school_id BIGINT, major VARCHAR(255), primary_department_id BIGINT, secondary_department_id BIGINT, class_year SMALLINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX school_id_idx (school_id), INDEX primary_department_id_idx (primary_department_id), INDEX secondary_department_id_idx (secondary_department_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_subject (id BIGINT AUTO_INCREMENT, user_id BIGINT, subject_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX subject_id_idx (subject_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_tracker (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, course_id BIGINT NOT NULL, notification_id BIGINT NOT NULL, new_posts BIGINT DEFAULT 0 NOT NULL, new_classmates BIGINT DEFAULT 0 NOT NULL, private BIGINT DEFAULT 0, INDEX user_id_idx (user_id), INDEX course_id_idx (course_id), INDEX notification_id_idx (notification_id), INDEX private_idx (private), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, post_count BIGINT, first_name VARCHAR(80) NOT NULL, last_name VARCHAR(80) NOT NULL, email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', is_officer TINYINT(1) DEFAULT '0', last_login DATETIME, lms_id VARCHAR(255), is_lms TINYINT DEFAULT 0 NOT NULL, lms_email VARCHAR(255), lms_domain VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_profile (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, email VARCHAR(80), fullname VARCHAR(80), image VARCHAR(255), birthday VARCHAR(20), about LONGTEXT, activity LONGTEXT, validate VARCHAR(17), is_staff TINYINT(1) DEFAULT '0' NOT NULL, is_tutor TINYINT(1) DEFAULT '0' NOT NULL, email_post TINYINT(1) DEFAULT '1' NOT NULL, email_reply TINYINT(1) DEFAULT '0' NOT NULL, email_from TINYINT(1) DEFAULT '0' NOT NULL, email_private TINYINT(1) DEFAULT '0' NOT NULL, enter_code TINYINT(1) DEFAULT '0' NOT NULL, has_modified_profile TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE academic_term_course ADD CONSTRAINT academic_term_course_course_id_course_id FOREIGN KEY (course_id) REFERENCES course(id);
ALTER TABLE academic_term_course ADD CONSTRAINT academic_term_course_academic_term_id_academic_term_id FOREIGN KEY (academic_term_id) REFERENCES academic_term(id);
ALTER TABLE course ADD CONSTRAINT course_subject_id_subject_id FOREIGN KEY (subject_id) REFERENCES subject(id);
ALTER TABLE course ADD CONSTRAINT course_instructor_id_sf_guard_user_id FOREIGN KEY (instructor_id) REFERENCES sf_guard_user(id);
ALTER TABLE course ADD CONSTRAINT course_department_id_department_id FOREIGN KEY (department_id) REFERENCES department(id);
ALTER TABLE department ADD CONSTRAINT department_school_id_school_id FOREIGN KEY (school_id) REFERENCES school(id);
ALTER TABLE document ADD CONSTRAINT document_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE document ADD CONSTRAINT document_course_id_course_id FOREIGN KEY (course_id) REFERENCES course(id);
ALTER TABLE event ADD CONSTRAINT event_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE event ADD CONSTRAINT event_course_id_course_id FOREIGN KEY (course_id) REFERENCES course(id);
ALTER TABLE friend ADD CONSTRAINT friend_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE friend ADD CONSTRAINT friend_friend_id_sf_guard_user_id FOREIGN KEY (friend_id) REFERENCES sf_guard_user(id);
ALTER TABLE friend_request ADD CONSTRAINT friend_request_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE friend_request ADD CONSTRAINT friend_request_friend_id_sf_guard_user_id FOREIGN KEY (friend_id) REFERENCES sf_guard_user(id);
ALTER TABLE instructor_course ADD CONSTRAINT instructor_course_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE instructor_course ADD CONSTRAINT instructor_course_course_id_course_id FOREIGN KEY (course_id) REFERENCES course(id);
ALTER TABLE issue ADD CONSTRAINT issue_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE lms_domain_key_secret ADD CONSTRAINT lms_domain_key_secret_domain_school_lms_domain FOREIGN KEY (id) REFERENCES school(id) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE post ADD CONSTRAINT post_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE post ADD CONSTRAINT post_user_attachment_id_user_attachment_id FOREIGN KEY (user_attachment_id) REFERENCES user_attachment(id);
ALTER TABLE post ADD CONSTRAINT post_parent_post_id_post_id FOREIGN KEY (parent_post_id) REFERENCES post(id);
ALTER TABLE post ADD CONSTRAINT post_link_data_id_link_data_id FOREIGN KEY (link_data_id) REFERENCES link_data(id);
ALTER TABLE school ADD CONSTRAINT school_first_friend_id_sf_guard_user_id FOREIGN KEY (first_friend_id) REFERENCES sf_guard_user(id);
ALTER TABLE user_attachment ADD CONSTRAINT user_attachment_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE user_course ADD CONSTRAINT user_course_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE user_course ADD CONSTRAINT user_course_course_id_course_id FOREIGN KEY (course_id) REFERENCES course(id);
ALTER TABLE user_event ADD CONSTRAINT user_event_event_id_event_id FOREIGN KEY (event_id) REFERENCES event(id);
ALTER TABLE user_notification ADD CONSTRAINT user_notification_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE user_notification ADD CONSTRAINT user_notification_notification_id_notification_id FOREIGN KEY (notification_id) REFERENCES notification(id);
ALTER TABLE user_school ADD CONSTRAINT user_school_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_school ADD CONSTRAINT user_school_secondary_department_id_department_id FOREIGN KEY (secondary_department_id) REFERENCES department(id);
ALTER TABLE user_school ADD CONSTRAINT user_school_school_id_school_id FOREIGN KEY (school_id) REFERENCES school(id);
ALTER TABLE user_school ADD CONSTRAINT user_school_primary_department_id_department_id FOREIGN KEY (primary_department_id) REFERENCES department(id);
ALTER TABLE user_subject ADD CONSTRAINT user_subject_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE user_subject ADD CONSTRAINT user_subject_subject_id_subject_id FOREIGN KEY (subject_id) REFERENCES subject(id);
ALTER TABLE user_tracker ADD CONSTRAINT user_tracker_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE user_tracker ADD CONSTRAINT user_tracker_private_post_private FOREIGN KEY (private) REFERENCES post(private);
ALTER TABLE user_tracker ADD CONSTRAINT user_tracker_notification_id_notification_id FOREIGN KEY (notification_id) REFERENCES notification(id);
ALTER TABLE user_tracker ADD CONSTRAINT user_tracker_course_id_course_id FOREIGN KEY (course_id) REFERENCES course(id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
