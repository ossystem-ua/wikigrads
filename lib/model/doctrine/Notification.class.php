<?php

/**
 * Notification
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox_old
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Notification extends BaseNotification
{
    
    const COURSE_OBJECT = "Course";
    const DOCUMENT_OBJECT = "Document";
    const POST_OBJECT = "Post";
    
    const SF_GUARD_USER_PROFILE = "sf_guard_user_profile";
    
    const COURSE_RELATED_OBJECT = "Course";
    const SCHOOL_RELATED_OBJECT = "School";
    
    const ADD_ACTION = "Add";
    const DELETE_ACTION = "Delete";
    
    const CLASSMATE_TYPE = "Classmate";
    const FRIEND_TYPE = "Friend";
    const EVERYONE_TYPE = "Everyone";
    
    // holds instance of a notification's object. the object is joined with a user, so user info can be retrieved as well.
    protected $object_instance = null; // holds retrieved object
    protected $object_related_instance = null; //holds retrieved related object
    
    protected $permissions = array();
    
    // these refer to the object user (e.g. post.user_id, user_school.user_id, etc.)
    protected $is_user_friend = false;          // if the object user is a friend of the logged in user
    protected $is_user_friend_pending = false;  // if the logged in user has a pending friends request for the object user
    protected $is_user_non_friend = true;       // if the object user is not a friend, and has not pending friend request
    protected $is_user_self = false;            // if the object user is the logged in user
        
    public function getCourse()
    {
        return $this->getObject() instanceof Course ? $this->getObject() : false;
    }    
    
    /**
     * Returns the object that triggered this notification
     * @return type
     */
    public function getObject(){
        if( ! $this->getObjectName()) {
            return false;
        }
        
        if($this->object_instance == null) {
            $obj = Doctrine_Core::getTable($this->getObjectName())->createQuery('o')
                ->leftJoin('o.User u')
                ->where('o.id = ?', $this->getObjectId())
                ->fetchOne()
            ;
            $this->object_instance = $obj;
        }
            
        return $this->object_instance;
    }
    
    /**
     * Returns the related object that triggered this notification
     * @return type
     */
    public function getRelatedObject(){
        if( ! $this->getRelatedObjectName()) {
            return false;
        }
        
        if($this->object_related_instance == null) {
            $obj = Doctrine_Core::getTable($this->getRelatedObjectName())->createQuery('o')
                ->where('o.id = ?', $this->getRelatedObjectId())
                ->fetchOne()
            ;
            $this->object_related_instance = $obj;
        }
            
        return $this->object_related_instance;
    }    
    
    
    
    /**
    * set object instance externally.
    * 
    * @param mixed $obj
    */
    public function setObjectInstance($obj) {
        if($obj->id == $this->getObjectId() && (get_class($obj) == $this->getObjectName())) {
            $this->object_instance = $obj;
        } else {
            throw new Exception('Notification object instance must be object for notification.object_id and notification.object_name');
        }
    }
    
    public function setPermission($key, $val) {
        $this->permissions[$key] = $val;
    }
    
    public function getPermission($key) {
        if(isset($this->permissions[$key])) {
            return $this->permissions[$key];
        }
        return false;
    }
    
    //////////////////////////////////////////////////////////////////////////////////////////
    // ALL OF THESE REFER TO THE OBJECT USER (e.g. a Post's user, which is related by post.user_id)
    public function setIsUserFriend($is_frield) {
        $this->is_user_friend = $is_frield;
        if($is_frield) {
            $this->is_user_non_friend = false;
        }
    }
    
    public function getIsUserFriend() {
        return $this->is_user_friend;
    }
    
    public function setIsUserFriendPending($is_friend_pending) {
        $this->is_user_friend_pending = $is_friend_pending;
        if($is_friend_pending) {
            $this->is_user_non_friend = false;
        }
    }
    
    public function getIsUserFriendPending() {
        return $this->is_user_friend_pending;
    }
    
    public function getIsUserNonFriend() {
        return $this->is_user_non_friend;
    }
    
    public function setIsUserSelf($is_user_self) {
        $this->is_user_self = $is_user_self; 
    }
    
    public function getIsUserSelf() {
        return $this->is_user_self;
    }
    ////////////////////////////////////////////////////////////////////////////////////////
    
    /**
     * Returns the comments that have been posted to this notification 
     */
    public function getComments(){
        $sql = Doctrine_Core::getTable('Post')->createQuery("p")
             ->where('p.object_id = ?', $this->getId())
             ->addWhere('p.object_name = ?', Post::NOTIFICATION_OBJECT)
             ->orderBy('p.created_at DESC')
        ;
        
        return $sql->execute();
        
    }    

    
    /*
     * Get user list that was informed about this notification
     */
    public function getNotifiedUsers(){
        $sql = Doctrine_Core::getTable('SfGuardUser')->createQuery('u')
               ->leftJoin('u.UserNotification un')
               ->where('un.notification_id = ?', $this->getId())
       ;
        
        
       return $sql->execute();
        
    }
    
    
}
