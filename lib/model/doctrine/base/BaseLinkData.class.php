<?php

/**
 * BaseLinkData
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $url
 * @property string $img
 * @property string $title
 * @property array $description
 * @property string $host
 * @property Doctrine_Collection $Post
 * 
 * @method string              getUrl()         Returns the current record's "url" value
 * @method string              getImg()         Returns the current record's "img" value
 * @method string              getTitle()       Returns the current record's "title" value
 * @method array               getDescription() Returns the current record's "description" value
 * @method string              getHost()        Returns the current record's "host" value
 * @method Doctrine_Collection getPost()        Returns the current record's "Post" collection
 * @method LinkData            setUrl()         Sets the current record's "url" value
 * @method LinkData            setImg()         Sets the current record's "img" value
 * @method LinkData            setTitle()       Sets the current record's "title" value
 * @method LinkData            setDescription() Sets the current record's "description" value
 * @method LinkData            setHost()        Sets the current record's "host" value
 * @method LinkData            setPost()        Sets the current record's "Post" collection
 * 
 * @package    Wikigrads
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLinkData extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('link_data');
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('img', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'array', null, array(
             'type' => 'array',
             ));
        $this->hasColumn('host', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Post', array(
             'local' => 'id',
             'foreign' => 'link_data_id'));

        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($softdelete0);
    }
}