<?php

/**
 * BaseUserNotification
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $notification_id
 * @property boolean $is_seen
 * @property sfGuardUser $User
 * @property Notification $Notification
 * 
 * @method integer          getUserId()          Returns the current record's "user_id" value
 * @method integer          getNotificationId()  Returns the current record's "notification_id" value
 * @method boolean          getIsSeen()          Returns the current record's "is_seen" value
 * @method sfGuardUser      getUser()            Returns the current record's "User" value
 * @method Notification     getNotification()    Returns the current record's "Notification" value
 * @method UserNotification setUserId()          Sets the current record's "user_id" value
 * @method UserNotification setNotificationId()  Sets the current record's "notification_id" value
 * @method UserNotification setIsSeen()          Sets the current record's "is_seen" value
 * @method UserNotification setUser()            Sets the current record's "User" value
 * @method UserNotification setNotification()    Sets the current record's "Notification" value
 * 
 * @package    Wikigrads
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserNotification extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_notification');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('notification_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_seen', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('Notification', array(
             'local' => 'notification_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}