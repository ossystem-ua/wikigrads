<?php

/**
 * BaseUserEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $event_id
 * @property boolean $is_attend
 * @property Event $Event
 * 
 * @method integer   getUserId()    Returns the current record's "user_id" value
 * @method integer   getEventId()   Returns the current record's "event_id" value
 * @method boolean   getIsAttend()  Returns the current record's "is_attend" value
 * @method Event     getEvent()     Returns the current record's "Event" value
 * @method UserEvent setUserId()    Sets the current record's "user_id" value
 * @method UserEvent setEventId()   Sets the current record's "event_id" value
 * @method UserEvent setIsAttend()  Sets the current record's "is_attend" value
 * @method UserEvent setEvent()     Sets the current record's "Event" value
 * 
 * @package    Wikigrads
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_event');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_attend', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}