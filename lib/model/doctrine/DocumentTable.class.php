<?php

/**
 * DocumentTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class DocumentTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object DocumentTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Document');
    }
    
    #####
    # Fetch
    ###
    
    /**
     * Return document list according to user or course
     * @param type $type
     * @return type
     */  
    public static function getDocumentListBy($object = NULL, $options=array()){
        if($object instanceof Course) {
            $sql = self::getDocumentsByCourseIdQuery($object->getId());
        
        } elseif ($object instanceof sfGuardUser){
            $sql = self::getDocumentByUserQuery($object->getId());
        
        } elseif ($object instanceof School){
            $sql = self::getDocumentsBySchoolQuery($object->getId());
        
        } else {
            $sql = self::getDocumentsAllQuery();
        }

        ////////////////////////////////////////////////////////////////////////
        // check if the option to just return the total record count is set
        if(Utils::getOptionValue($options, 'return_count')) {
            return $sql->count();
        }
        
        ////////////////////////////////////////////////////////////////////////
        // otherwise, they can specify a limit and get the result set back
        $limit = Utils::getOptionValue($options, 'limit');
        $offset = Utils::getOptionValue($options, 'offset', 0); // will default to false if value is 0
        $recs_per_page = Utils::getOptionValue($options, 'recs_per_page');

        // supports standalone doctrine limit()
        if($limit)  { $sql->limit($limit); }

        // or supports LIMIT(offset, num_recs)
        if($recs_per_page) {
            $sql->offset($offset);
            $sql->limit($recs_per_page);
        }

        return $sql->execute();
    }    
    
    //////////////////////////////////////////////////////////////////////////
    // DOCUMENT BY QUERIES - can be used for getting result set or count
    public static function getDocumentByUserQuery($user_id) {        
        return Doctrine_Core::getTable('Document')->createQuery('d')
            ->where('d.user_id = ?', $user_id)
            ->orderBy('d.created_at DESC')
        ;
    }
    
    public static function getDocumentsByCourseIdQuery($course_id) {
        return Doctrine_Core::getTable('Document')->createQuery('d')
            ->where('d.course_id = ?', $course_id)
            ->orderBy('d.created_at DESC')
        ;
    } 
    
    public static function getDocumentsBySchoolQuery($school_id) {
        return Doctrine_Core::getTable('Document')
            ->createQuery('d')
            ->leftJoin('d.Course c ON d.course_id = c.id  ')
            ->leftJoin('c.Department dp ON c.department_id = dp.id')
            ->where('dp.school_id = ?', $school_id)                
            ->orderBy('d.created_at DESC')
        ;
    }
    
    public static function getDocumentsAllQuery() {
        return Doctrine_Core::getTable('Document')
           ->createQuery('d')
           ->orderBy('d.created_at DESC')
        ;
    }
    
    /**
     * Get Document By Slug
     * 
     * Fetch course by course slug.
     *
     * @param unknown_type $slug
     * @return unknown
     */
    public static function getDocumentBySlug($slug) {
        $id = current(preg_split('#\|#', $slug, 2));
        
        $sql = Doctrine_Core::getTable('Document')->createQuery('d')
                ->where('d.id = ?', $id)
                ->addWhere('d.deleted_at IS NULL');
        
        return $sql->fetchOne();
    }        
}